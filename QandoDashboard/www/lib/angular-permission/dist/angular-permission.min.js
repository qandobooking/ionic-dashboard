/**
 * angular-permission
 * Route permission and access control as simple as it can get
 * @version v2.2.4 - 2016-03-24
 * @link http://www.rafaelvidaurre.com
 * @author Rafael Vidaurre <narzerus@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */

!function(){"use strict";var a=angular.module("permission",["ui.router"]);a.config(["$stateProvider",function(a){a.decorator("parent",function(a,b){return a.self.getState=function(){return a},b(a)})}]),a.run(["$rootScope","$state","$q","$location","Authorization","PermissionMap",function(a,b,c,d,e,f){a.$on("$stateChangeStart",function(c,g,h,i,j,k){function l(a){return angular.isDefined(a.data)&&angular.isDefined(a.data.permissions)}function m(a){angular.extend(g,{$$isAuthorizationFinished:a})}function n(){return g.$$isAuthorizationFinished}function o(){return s()||r()}function p(a){var c=new f({redirectTo:a.redirectTo}),d=b.get(g.name).getState().path.slice().reverse();return angular.forEach(d,function(a){l(a)&&c.extendPermissionMap(new f(a.data.permissions))}),c}function q(c){e.authorize(c,h).then(function(){a.$broadcast("$stateChangePermissionAccepted",g,h,k),d.replace(),b.go(g.name,h,{notify:!1}).then(function(){a.$broadcast("$stateChangeSuccess",g,h,i,j)})})["catch"](function(d){return a.$broadcast("$stateChangePermissionDenied",g,h,k),c.resolveRedirectState(d).then(function(a){b.go(a.state,a.params,a.options)})})["finally"](function(){m(!1)})}function r(){return a.$broadcast("$stateChangeStart",g,h,i,j,k).defaultPrevented}function s(){return a.$broadcast("$stateChangePermissionStart",g,h,k).defaultPrevented}if(!n()&&l(g)&&(c.preventDefault(),m(!0),!o())){var t=p(g.data.permissions);q(t)}})}])}(),function(){"use strict";angular.module("permission").factory("PermissionMap",["$q",function(a){function b(a,b,c,d){this.only=e(a.only,b,c,d),this.except=e(a.except,b,c,d),this.redirectTo=a.redirectTo}function c(b,c){return a.when(b.call(null,c)).then(function(a){if(angular.isString(a))return{state:a};if(angular.isObject(a))return a;throw new TypeError('When used "redirectTo" as function, returned value must be string or object')})}function d(b,d){if(!angular.isDefined(b["default"]))throw new ReferenceError('When used "redirectTo" as object, property "default" must be defined');var e=b[d];return angular.isDefined(e)||(e=b["default"]),angular.isFunction(e)?c(e,d):angular.isObject(e)?a.resolve(e):angular.isString(e)?a.resolve({state:e}):void 0}function e(a,b,c,d){return angular.isString(a)?[a]:angular.isArray(a)?a:angular.isFunction(a)?a.call(null,b,c,d):[]}return b.prototype.extendPermissionMap=function(a){this.only=this.only.concat(a.only),this.except=this.except.concat(a.except)},b.prototype.resolveRedirectState=function(b){return angular.isFunction(this.redirectTo)?c(this.redirectTo,b):angular.isObject(this.redirectTo)?d(this.redirectTo,b):angular.isString(this.redirectTo)?a.resolve({state:this.redirectTo}):a.reject(null)},b}])}(),function(){"use strict";angular.module("permission").factory("Permission",["$q",function(a){function b(a,b){d(a,b),this.permissionName=a,this.validationFunction=b}function c(b,c){var d=a.defer();return b?d.resolve(c):d.reject(c),d.promise}function d(a,b){if(!angular.isString(a))throw new TypeError('Parameter "permissionName" name must be String');if(!angular.isFunction(b))throw new TypeError('Parameter "validationFunction" must be Function')}return b.prototype.validatePermission=function(a){var b=this.validationFunction.call(null,a,this.permissionName);return angular.isFunction(b.then)||(b=c(b,this.permissionName)),b},b}])}(),function(){"use strict";angular.module("permission").factory("Role",["$q","PermissionStore",function(a,b){function c(a,c,d){e(a,c,d),this.roleName=a,this.permissionNames=c||[],this.validationFunction=d,d&&b.defineManyPermissions(c,d)}function d(b,c){var d=a.defer();return b?d.resolve(c):d.reject(c),d.promise}function e(a,b,c){if(!angular.isString(a))throw new TypeError('Parameter "roleName" name must be String');if(!angular.isArray(b))throw new TypeError('Parameter "permissionNames" must be Array');if(!b.length&&!angular.isFunction(c))throw new TypeError('Parameter "validationFunction" must be provided for empty "permissionNames" array')}return c.prototype.validateRole=function(c){if(this.permissionNames.length){var e=this.permissionNames.map(function(e){if(b.hasPermissionDefinition(e)){var f=b.getPermissionDefinition(e),g=f.validationFunction.call(null,c,f.permissionName);return angular.isFunction(g.then)||(g=d(g)),g}return a.reject(null)});return a.all(e)}var f=this.validationFunction.call(null,c,this.roleName);return angular.isFunction(f.then)||(f=d(f,this.roleName)),a.resolve(f)},c}])}(),function(){"use strict";angular.module("permission").service("PermissionStore",["Permission",function(a){function b(b,c){i[b]=new a(b,c)}function c(a,c){if(!angular.isArray(a))throw new TypeError('Parameter "permissionNames" name must be Array');angular.forEach(a,function(a){b(a,c)})}function d(a){delete i[a]}function e(a){return angular.isDefined(i[a])}function f(a){return i[a]}function g(){return i}function h(){i={}}var i={};this.definePermission=b,this.defineManyPermissions=c,this.removePermissionDefinition=d,this.hasPermissionDefinition=e,this.getPermissionDefinition=f,this.getStore=g,this.clearStore=h}])}(),function(){"use strict";angular.module("permission").service("RoleStore",["Role",function(a){function b(b,c,d){h[b]=new a(b,c,d)}function c(a){delete h[a]}function d(a){return angular.isDefined(h[a])}function e(a){return h[a]}function f(){return h}function g(){h={}}var h={};this.defineRole=b,this.getRoleDefinition=e,this.hasRoleDefinition=d,this.removeRoleDefinition=c,this.getStore=f,this.clearStore=g}])}(),function(){"use strict";angular.module("permission").directive("permission",["$log","Authorization","PermissionMap","PermissionStrategies",function(a,b,c,d){return{restrict:"A",scope:!0,bindToController:{only:"=?permissionOnly",except:"=?permissionExcept",onAuthorized:"&?permissionOnAuthorized",onUnauthorized:"&?permissionOnUnauthorized",deprecatedOnly:"=only",deprecatedExcept:"=except"},controllerAs:"permission",controller:["$scope","$element",function(e,f){function g(){angular.isFunction(i.onAuthorized)?i.onAuthorized()(f):d.showElement(f)}function h(){angular.isFunction(i.onUnauthorized)?i.onUnauthorized()(f):d.hideElement(f)}var i=this;(angular.isDefined(i.deprecatedOnly)||angular.isDefined(i.deprecatedExcept))&&a.warn('Attributes "only" and "except" are deprecated since 2.2.0+ and their support will be removed from 2.3.0. Use scoped "permission-only" and "permission-except" instead.'),e.$watchGroup(["permission.only","permission.except","permission.deprecatedOnly","permission.deprecatedExcept"],function(){try{b.authorize(new c({only:i.only||i.deprecatedOnly,except:i.except||i.deprecatedExcept}),null).then(function(){g()})["catch"](function(){h()})}catch(d){h(),a.error(d.message)}})}]}}])}(),function(){"use strict";angular.module("permission").service("Authorization",["$q","PermissionMap","PermissionStore","RoleStore",function(a,b,c,d){function e(a,b){return f(a,b)}function f(b,c){var d=a.defer(),e=h(b.except,c);return g(e).then(function(a){d.reject(a)})["catch"](function(){b.only.length||d.resolve(null);var a=h(b.only,c);g(a).then(function(a){d.resolve(a)})["catch"](function(a){d.reject(a)})}),d.promise}function g(b){var c=a.defer(),d=0,e=angular.isArray(b)?[]:{};return angular.forEach(b,function(b,f){d++,a.when(b).then(function(a){e.hasOwnProperty(f)||c.resolve(a)})["catch"](function(a){e.hasOwnProperty(f)||(e[f]=a,--d||c.reject(a))})}),0===d&&c.reject(e),c.promise}function h(b,e){return b.map(function(b){if(d.hasRoleDefinition(b)){var f=d.getRoleDefinition(b);return f.validateRole(e)}if(c.hasPermissionDefinition(b)){var g=c.getPermissionDefinition(b);return g.validatePermission(e)}return b?a.reject(b):void 0})}this.authorize=e}])}(),function(){"use strict";angular.module("permission").constant("PermissionStrategies",{enableElement:function(a){a.removeAttr("disabled")},disableElement:function(a){a.attr("disabled","disabled")},showElement:function(a){a.removeClass("ng-hide")},hideElement:function(a){a.addClass("ng-hide")}})}();
//# sourceMappingURL=angular-permission.min.js.map